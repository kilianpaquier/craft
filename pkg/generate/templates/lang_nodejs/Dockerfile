# Code generated by craft; DO NOT EDIT.

<<- $specifics := get .Languages "nodejs" >>
<<- $manager := cutAfter $specifics.PackageManager "@" >>

<<- $maintainer := index .Maintainers 0 >>

#############################
#        STAGE BUILD        #
#############################
FROM node:lts-slim AS build

WORKDIR /app

COPY . .

<<- if eq $manager "pnpm" >>

ENV NODE_ENV="production"
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prefer-offline "${NODE_INSTALL_EXTRA_OPTS}" && \
    pnpm run build
<<- end >>

<<- if eq $manager "npm" >>

ENV NODE_ENV="production"

RUN npm ci --omit=dev --no-audit --prefer-offline "${NODE_INSTALL_EXTRA_OPTS}" && npm run build
<<- end >>

#############################
#         STAGE RUN         #
#############################
FROM nginx:stable-alpine

LABEL org.opencontainers.image.authors="<< $maintainer.Name >><< if $maintainer.Email >> <<"<">><< $maintainer.Email >><<">">><< end >>"
LABEL org.opencontainers.image.vendor="<< $maintainer.Name >>"

LABEL org.opencontainers.image.title="<< .ProjectName >>"
<<- if .Description >>
LABEL org.opencontainers.image.description="<< .Description >>"
<<- end >>
<<- if .License >>
LABEL org.opencontainers.image.licenses="<< upper .License >>"
<<- end >>
LABEL org.opencontainers.image.url="<< print .ProjectHost "/" .ProjectPath >>"
LABEL org.opencontainers.image.source="<< print .ProjectHost "/" .ProjectPath >>"
LABEL org.opencontainers.image.documentation="<< print .ProjectHost "/" .ProjectPath >>"

WORKDIR /app

COPY --from=build /app/dist ./
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE ${EXPOSE_PORT}

CMD ["nginx", "-g", "daemon off;"]