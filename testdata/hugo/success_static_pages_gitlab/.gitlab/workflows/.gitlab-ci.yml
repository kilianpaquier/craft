# Code generated by craft; DO NOT EDIT.

---
include:

  # semantic-release template
  - project: "to-be-continuous/semantic-release"
    ref: "3"
    file: "templates/gitlab-ci-semrel.yml"

variables:

  GIT_AUTHOR_EMAIL: ${GITLAB_USER_EMAIL}
  GIT_COMMITTER_EMAIL: ${GITLAB_USER_EMAIL}

  SEMREL_TAG_FORMAT: v$${version}
  SEMREL_REQUIRED_PLUGINS_FILE: .gitlab/semrel-plugins.txt
  SEMREL_HOOKS_DIR: scripts
  SEMREL_INFO_ON: all
  SEMREL_RELEASE_DISABLED: "true"
  SEMREL_AUTO_RELEASE_ENABLED: "false"

semantic-release-info:
  after_script:
    - source "${SEMREL_CONFIG_DIR}/semrel.out.env" && rm "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - >
      echo "BRANCH_SHA=$(echo "${CI_COMMIT_REF_NAME}" | sha256sum | cut -c -8)" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"

      if [ "${SEMREL_INFO_NEXT_VERSION}" != "" ]; then
        echo "SEMREL_INFO_LAST_VERSION=v${SEMREL_INFO_LAST_VERSION#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION=v${SEMREL_INFO_NEXT_VERSION#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=${SEMREL_INFO_NEXT_VERSION_TYPE}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
      else
        DESCRIBE=$(git describe --tags || echo "v1.0.0")
        echo "SEMREL_INFO_NEXT_VERSION=v${DESCRIBE#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=build" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
      fi
    - cat "${SEMREL_CONFIG_DIR}/semrel.out.env"

hugo-build:
  image: registry.gitlab.com/pages/hugo/hugo_extended:latest
  stage: build
  variables:
    DIST_FOLDER: dist
  before_script:
    - apk add go
  script:
    - hugo --gc --minify --destination "$DIST_FOLDER"
  artifacts:
    name: $ENV
    paths:
      - $DIST_FOLDER
    expire_in: 1 day

pages:
  stage: deploy
  environment:
    name: $ENV
    action: start
    url: $CI_PAGES_URL
  variables:
    ENV: production
    DIST_FOLDER: dist
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == 'true'
      when: manual
  script:
    - >
      if [ "$DIST_FOLDER" != "public" ]; then
        mkdir -p public
        $DIST_FOLDER/* public
      fi
  artifacts:
    name: $ENV
    paths:
      - public
    expire_in: 1 day