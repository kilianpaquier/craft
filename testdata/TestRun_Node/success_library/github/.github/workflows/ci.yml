# Code generated by craft; DO NOT EDIT.

name: CICD
run-name: CICD

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - alpha
      - beta
      - dev
      - develop
      - development
      - next
      - staging
      - main
      - master
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:
    inputs:
      dry_run:
        description: Whether to run all impacting jobs in dry run or preview mode.
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && github.ref_protected != true) }}
    steps:
      - id: skip
        run: echo "Running workflow"

  node-lint:
    name: Node Lint
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
      - run: mkdir -p reports/
      - run: bun install --frozen-lockfile
      - run: bun run lint -o reports/node-lint.xslint.json -f json

  node-test:
    name: Node Test
    runs-on: ${{ matrix.os }}
    needs: run-workflow
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
      - run: mkdir -p reports/
      - run: |
          bun install --frozen-lockfile
          bun test --rerun-each 10 --coverage --coverage-reporter=lcov --coverage-dir=reports

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.ref_protected == 'true' }}
    environment:
      name: release
      url: ${{ github.server_url }}/${{ github.repository_owner }}/${{ github.repository }}/releases/tag/${{ steps.semrel_version.outputs.new_release_version }}
    needs:
      - node-test
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: ${{ inputs.dry_run == 'true' }}
          semantic_version: 24
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            @semantic-release/npm
            @kilianpaquier/semantic-release-backmerge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}