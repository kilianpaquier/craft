# Code generated by craft; DO NOT EDIT.

name: CICD
run-name: CICD

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - alpha
      - beta
      - dev
      - develop
      - development
      - next
      - staging
      - main
      - master
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:
    inputs:
      release:
        description: Run release job by checking this box.
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && github.ref_protected != true) }}
    steps:
      - id: skip
        run: echo "Running workflow"

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    if: ${{ github.event_name != 'pull_request' }}
    outputs:
      version: ${{ steps.version.outputs.version }}
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: |
          DESCRIBE=$(git describe --tags || echo "v0.0.0")
          echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  node-lint:
    name: Node Lint
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
      - run: mkdir -p reports/
      - run: bun install --frozen-lockfile
      - run: bun run lint -o reports/node-lint.xslint.json -f json

  node-test:
    name: Node Test
    runs-on: ${{ matrix.os }}
    needs: run-workflow
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
      - run: mkdir -p reports/
      - run: |
          bun install --frozen-lockfile
          bun test --rerun-each 10 --coverage --coverage-reporter=lcov --coverage-dir=reports

  node-build:
    name: Node Build
    runs-on: ubuntu-latest
    needs:
      - version
      - node-test
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json
      - run: bun install --frozen-lockfile
      - run: bun run build
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  netlify:
    name: Netlify
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref_protected) || github.event_name == 'workflow_dispatch' }}
    needs:
      - node-build
    environment:
      name: netlify
      url: ${{ steps.netlify.outputs.deploy-url }}
    permissions:
      deployments: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # https://github.com/marketplace/actions/netlify-actions
      - id: branch_sha
        run: |
          echo "branch_sha=$(echo "${GITHUB_REF_NAME}" | sha256sum | cut -c -8)" >> $GITHUB_OUTPUT
      - id: netlify
        uses: nwtgck/actions-netlify@v3
        with:
          alias: ${{ steps.branch_sha.outputs.branch_sha }}
          deploy-message: ${{ github.ref_name }}
          enable-commit-comment: false
          enable-commit-status: false
          github-deployment-environment: netlify
          github-token: ${{ secrets.GITHUB_TOKEN }}
          netlify-config-path: netlify.toml
          production-branch: ${{ github.event.repository.default_branch }}
          publish-dir: dist
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}