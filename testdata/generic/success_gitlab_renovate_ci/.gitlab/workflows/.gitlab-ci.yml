# Code generated by craft; DO NOT EDIT.

---
include:

  # semantic-release template
  - project: "to-be-continuous/semantic-release"
    ref: "3"
    file: "templates/gitlab-ci-semrel.yml"

  # Renovate template
  - project: "to-be-continuous/renovate"
    ref: "1"
    file: "templates/gitlab-ci-renovate.yml"

variables:

  RENOVATE_AUTODISCOVER: "true"
  RENOVATE_AUTODISCOVER_FILTER: ${CI_PROJECT_PATH}

  GIT_AUTHOR_EMAIL: ${GITLAB_USER_EMAIL}
  GIT_COMMITTER_EMAIL: ${GITLAB_USER_EMAIL}

  SEMREL_TAG_FORMAT: v$${version}
  SEMREL_REQUIRED_PLUGINS_FILE: .gitlab/semrel-plugins.txt
  SEMREL_HOOKS_DIR: scripts
  SEMREL_INFO_ON: all
  SEMREL_RELEASE_DISABLED: "true"
  SEMREL_AUTO_RELEASE_ENABLED: "false"

semantic-release-info:
  after_script:
    - source "${SEMREL_CONFIG_DIR}/semrel.out.env" && rm "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - BRANCH_SHA=$(echo "${CI_COMMIT_REF_NAME}" | sha256sum | cut -c -8)
    - echo "BRANCH_SHA=${BRANCH_SHA}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - >
      if echo "$SEMREL_INFO_NEXT_VERSION" | grep -Eq "^[0-9]+(\.[0-9]+){2}.*$"; then
        echo "SEMREL_INFO_LAST_VERSION=v${SEMREL_INFO_LAST_VERSION#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION=v${SEMREL_INFO_NEXT_VERSION#v}-build.${BRANCH_SHA}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=${SEMREL_INFO_NEXT_VERSION_TYPE}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        cat "${SEMREL_CONFIG_DIR}/semrel.out.env"
        exit 0
      fi

      git fetch --tags

      if [ "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "" ]; then
        if echo "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" | grep -Eq "^v[0-9]+(\.([0-9]+|x))?\.x$"; then
          SEARCH="${CI_MERGE_REQUEST_TARGET_BRANCH_NAME%%.x*}"
        fi
      fi

      SEMREL_INFO_LAST_VERSION=$(git tag --list | sort -V | grep -E "${SEARCH}" | tail -n1)

      SEMREL_INFO_NEXT_VERSION=${SEMREL_INFO_LAST_VERSION-1.0.0}
      SEMREL_INFO_NEXT_VERSION=${SEMREL_INFO_NEXT_VERSION%-*}

    - echo "SEMREL_INFO_LAST_VERSION=v${SEMREL_INFO_LAST_VERSION#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - echo "SEMREL_INFO_NEXT_VERSION=v${SEMREL_INFO_NEXT_VERSION#v}-build.${SHA}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - echo "SEMREL_INFO_NEXT_VERSION_TYPE=build" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - cat "${SEMREL_CONFIG_DIR}/semrel.out.env"