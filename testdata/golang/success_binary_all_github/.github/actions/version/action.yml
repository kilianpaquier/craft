# Code generated by craft; DO NOT EDIT.

name: Version
description: Compute the next release version or release it

outputs:
  branch_sha:
    description: The concerned branch sha256 value
    value: ${{ steps.version.outputs.branch_sha }}
  release:
    description: Whether a release can be made or not
    value: ${{ steps.version.outputs.release }}
  version:
    description: The computed version
    value: ${{ steps.version.outputs.version }}

runs:
  using: composite
  steps:
    - shell: bash
      run: |
        if [ "${MODE}" != "dry_run" ] && [ "${MODE}" != "draft" ] && [ "${MODE}" != "release" ]; then
          echo "invalid input mode '${MODE}', must be one of 'dry_run', 'draft', 'release'"
          exit 2
        fi

        if [ "${MODE}" != "dry_run" ] && [ "${GITHUB_REF_PROTECTED}" != "true" ]; then
          echo "invalid input mode '${MODE}', can't be 'draft' or 'release' when github branch isn't protected"
        fi
      env:
        MODE: ${{ inputs.mode }}
    - id: version
      shell: bash
      run: |
        BRANCH_SHA=$(echo "${GITHUB_REF_NAME}" | sha256sum | cut -c -8)
        echo "branch_sha=${BRANCH_SHA}" >> $GITHUB_OUTPUT

        git fetch --tags

        LAST_TAG=$(git tag --list | sort -V | tail -n1)

        NEXT_TAG=${LAST_TAG-1.0.0}
        NEXT_TAG=${NEXT_TAG%-*}

        echo "version=v${NEXT_TAG#v}-build.${BRANCH_SHA}" >> $GITHUB_OUTPUT
        echo "release=false" >> $GITHUB_OUTPUT
    - shell: bash
      run: echo $VERSION
      env:
        VERSION: ${{ steps.version.outputs.version }}