# Code generated by craft; DO NOT EDIT.

name: Release
run-name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: Dry run
        type: boolean
        default: false
  push:
    branches:
      - main
      - master
      - staging
      - dev
      - develop
      - development
      - next
      - beta
      - alpha

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      branch_sha: ${{ steps.release.outputs.branch_sha }}
      release: ${{ steps.release.outputs.release }}
      version: ${{ steps.release.outputs.version }}
    permissions:
      contents: write # create release
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/gh-release
      - id: gh-release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          prerelease: ${{ needs.version.outputs.release != 'true' }}
          target_commitish: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - id: release
        run: |
          BRANCH_SHA=$(echo "${GITHUB_REF_NAME}" | sha256sum | cut -c -8)
          echo "branch_sha=${BRANCH_SHA}" >> $GITHUB_OUTPUT

          if [ "${GITHUB_REF_NAME}" = "main" ] || [ "${GITHUB_REF_NAME}" = "master" ]; then
            echo "release=true" >> $GITHUB_OUTPUT
          fi

          echo "version=${RELEASE_URL##*/}" >> $GITHUB_OUTPUT # remove everything before the last / in the URL (should more or less match the tag name ...)
        env:
          RELEASE_URL: ${{ steps.gh-release.outputs.url }}
      - run: echo $VERSION
        env:
          VERSION: ${{ steps.release.outputs.version }}

  go-build:
    name: Go Build
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.event_name, 'pull_request') }}
    needs: version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: go.mod
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean --config .goreleaser.yml --skip=validate --skip=announce --skip=publish --snapshot
        env:
          VERSION: ${{ needs.version.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: build
          # order is important to filter unwanted globs after the filter or desired globs
          path: |
            dist/*
            !dist/*.json
            !dist/*.yaml
            !dist/*/
          retention-days: 1

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.ref_protected && ! startsWith(github.event_name, 'pull_request') }}
    environment: release
    needs:
      - version
      - go-build
    permissions:
      contents: write # create release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # https://github.com/marketplace/actions/gh-release
      - uses: softprops/action-gh-release@v2
        with:
          draft: ${{ github.event_name != 'push' || inputs.dry_run }}
          files: |
            CHANGELOG.md
            checksums.txt
            dist/*
          generate_release_notes: true
          prerelease: ${{ needs.version.outputs.release != 'true' }}
          target_commitish: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}