# Code generated by craft; DO NOT EDIT.

---
include:

  # semantic-release template
  - project: "to-be-continuous/semantic-release"
    ref: "3"
    file: "templates/gitlab-ci-semrel.yml"

  # Renovate template
  - project: "to-be-continuous/renovate"
    ref: "1"
    file: "templates/gitlab-ci-renovate.yml"

variables:

  RENOVATE_AUTODISCOVER: "true"
  RENOVATE_AUTODISCOVER_FILTER: $CI_PROJECT_NAMESPACE

  GIT_AUTHOR_EMAIL: ${GITLAB_USER_EMAIL}
  GIT_COMMITTER_EMAIL: ${GITLAB_USER_EMAIL}

  SEMREL_AUTO_RELEASE_ENABLED: "false"
  SEMREL_BRANCHES_REF: /^(master|main|v[0-9]+\.x|v[0-9]+\.[0-9]+\.x|next|alpha|beta|staging|dev|develop|development)$/
  SEMREL_HOOKS_DIR: scripts
  SEMREL_INFO_ON: all
  SEMREL_RELEASE_DISABLED: "true"
  SEMREL_REQUIRED_PLUGINS_FILE: .gitlab/semrel-plugins.txt
  SEMREL_TAG_FORMAT: v$${version}

semantic-release-info:
  variables:
    GIT_DEPTH: "0"
  after_script:
    - source "${SEMREL_CONFIG_DIR}/semrel.out.env" && rm "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - >
      echo "BRANCH_SHA=$(echo "$CI_COMMIT_REF_NAME" | sha256sum | cut -c -8)" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"

      if [ "$SEMREL_INFO_NEXT_VERSION" != "" ]; then
        echo "SEMREL_INFO_LAST_VERSION=v${SEMREL_INFO_LAST_VERSION#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION=v${SEMREL_INFO_NEXT_VERSION#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=${SEMREL_INFO_NEXT_VERSION_TYPE}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
      else
        DESCRIBE=$(git describe --tags || echo "v1.0.0")
        echo "SEMREL_INFO_NEXT_VERSION=v${DESCRIBE#v}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
        echo "SEMREL_INFO_NEXT_VERSION_TYPE=build" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
      fi
    - cat "${SEMREL_CONFIG_DIR}/semrel.out.env"

semantic-release:
  variables:
    GIT_DEPTH: "0"

.renovate-rules: &renovate-rules
  rules:
    # see https://gitlab.com/to-be-continuous/renovate/-/blob/master/templates/gitlab-ci-renovate.yml?ref_type=heads#L348
    # update mode only with schedule triggering
    - if: $CI_PIPELINE_SOURCE == 'schedule'
      variables:
        RENOVATE_DRY_RUN: "false"
    # dry run with web triggering
    - if: $CI_PIPELINE_SOURCE == 'web'

renovate-validator:
  <<: *renovate-rules

renovate-depcheck:
  <<: *renovate-rules