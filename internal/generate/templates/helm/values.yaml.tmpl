# Code generated by craft; DO NOT EDIT.

<<- $kubeVersion := "v1.30" >>
<<- $maintainer := index .maintainers 0 >>

<< with .imagePullSecrets >>
imagePullSecrets:
  <<- toYaml . | nindent 2 >>
<< else ->>
imagePullSecrets: []
<<- end >>

nameOverride: << .nameOverride | default ("" | quote) >>
fullnameOverride: << .fullnameOverride | default ("" | quote) >>

serviceAccount:
  # Specifies whether a service account should be created
  create: << .serviceAccount.create | default "false" >>
  # Annotations to add to the service account
  <<- with .serviceAccount.annotations >>
  annotations:
    <<- toYaml . | nindent 4 >>
  <<- else >>
  annotations: {}
  <<- end >>
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: << .serviceAccount.name | default ("" | quote) >>

#############################################
#               all cronjobs                #
#############################################
<<- with .crons >>
crons:
<<- range $name, $config := . >>
  << $name >>:
    suspend: true
    schedule: << $config.schedule | default "*/1 * * * *" | quote >>
    concurrencyPolicy: << $config.concurrencyPolicy | default "Forbid" >>
    completionMode: << $config.completionMode | default "NonIndexed" >>
    completions: << $config.completions | default 1 >>
    parallelism: << $config.parallelism | default 1 >>
    image:
      registry: << $config.image.registry | default $.docker.registry | default ("" | quote) >>
      repository: << $config.image.repository | default $.projectPath >>
      pullPolicy: << $config.image.pullPolicy | default ("" | quote) >>
      # Overrides the image tag whose default is the chart appVersion.
      tag: << $config.image.tag | default "" | quote >>
    env:
      <<- $env := merge (dict "BINARY_NAME" $name) (dict "BINARY_PORT" ($.docker.port | default 3000)) $config.env >>
      <<- toYaml $env | nindent 6 >>
    <<- with $config.envFrom >>
    envFrom:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    envFrom: []
      # - prefix: ""
      #   configMapRef:
      #     name: ""
      #   secretRef:
      #     name: ""
    <<- end >>
    resources:
      limits:
        cpu: << $config.resources.limits.cpu | default "250m" >>
        memory: << $config.resources.limits.memory | default "256Mi" >>
        storage: << $config.resources.limits.storage | default "10Gi" >>
      requests:
        cpu: << $config.resources.requests.cpu | default "50m" >>
        memory: << $config.resources.requests.memory | default "128Mi" >>
        storage: << $config.resources.requests.storage | default "5Gi" >>
    failedJobsHistoryLimit: << $config.failedJobsHistoryLimit | default 1 >>
    successfulJobsHistoryLimit: << $config.successfulJobsHistoryLimit | default 3 >>
    restartPolicy: << $config.restartPolicy | default "OnFailure" >>
    <<- with $config.configMap >>
    configMap:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    configMap: {}
      # mountPath: /etc/config/
      # tpl_folders: # folders to be included in configmap with tpl
      #   - folder_name
      # include_folders: # folders to be included in configmap without tpl
      #   - folder_name
      # data:
      #   name: value
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#volume-v1-core
    <<- with $config.volumes >>
    volumes:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    volumes: []
      # - name: ""
      #   configMap:
      #     name: configMapName
      # - name: ""
      #   emptyDir:
      #     medium: ""
      #     sizeLimit: 1Gi
      # - name: ""
      #   persistentVolumeClaim:
      #     claimName: ""
      #     readOnly: false
      # - name: ""
      #   secret: 
      #     secretName: ""
    <<- end >>
    <<- with $config.volumeMounts >>
    volumeMounts:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    volumeMounts: []
      # - mountPath: /etc/config/
      #   name: volume[*].name
      #   readOnly: true
    <<- end >>
    
    << with $config.podAnnotations ->>
    podAnnotations:
      <<- toYaml . | nindent 6 >>
    << else ->>
    podAnnotations: {}
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#podsecuritycontext-v1-core
    <<- with $config.podSecurityContext >>
    podSecurityContext:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    podSecurityContext: {}
    <<- end >>
      # fsGroup: 2
      # fsGroupChangePolicy: Always | OnRootMismatch
      # runAsGroup: 1001
      # runAsNonRoot: true
      # runAsUser: 1001
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#securitycontext-v1-core
    <<- with $config.securityContext >>
    securityContext:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    securityContext: {}
      # allowPrivilegeEscalation: false
      # capabilities:
      #   add: []
      #   drop: []
      # privileged: false
      # readOnlyRootFilesystem: true
      # runAsGroup: 1001
      # runAsNonRoot: true
      # runAsUser: 1001
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#nodeselector-v1-core
    << with $config.nodeSelector ->>
    nodeSelector:
      <<- toYaml . | nindent 6 >>
    << else ->>
    nodeSelector: {}
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#toleration-v1-core
    <<- with $config.tolerations >>
    tolerations:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    tolerations: []
      # - effect: NoSchedule | PreferNoSchedule | NoExecute
      #   key: ""
      #   operator: Exists | Equal
      #   tolerationSeconds: 600
      #   value: ""
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#affinity-v1-core
    <<- with $config.affinity >>
    affinity:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    affinity: {}
    <<- end >>
<< end >>
<<- else >>
crons: {}
<<- end >>

#############################################
#                 all jobs                  #
#############################################
<<- with .jobs >>
jobs:
<<- range $name, $config := . >>
  << $name >>:
    suspend: true
    completionMode: << $config.completionMode | default "NonIndexed" >>
    completions: << $config.completions | default 1 >>
    parallelism: << $config.parallelism | default 1 >>
    <<- with $config.ttlSecondsAfterFinished >>
    ttlSecondsAfterFinished: << . >>
    <<- end >>
    image:
      registry: << $config.image.registry | default $.docker.registry | default ("" | quote) >>
      repository: << $config.image.repository | default $.projectPath >>
      pullPolicy: << $config.image.pullPolicy | default ("" | quote) >>
      # Overrides the image tag whose default is the chart appVersion.
      tag: << $config.image.tag | default "" | quote >>
    env:
      <<- $env := merge (dict "BINARY_NAME" $name) (dict "BINARY_PORT" ($.docker.port | default 3000)) $config.env >>
      <<- toYaml $env | nindent 6 >>
    <<- with $config.envFrom >>
    envFrom:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    envFrom: []
      # - prefix: ""
      #   configMapRef:
      #     name: ""
      #   secretRef:
      #     name: ""
    <<- end >>
    resources:
      limits:
        cpu: << $config.resources.limits.cpu | default "250m" >>
        memory: << $config.resources.limits.memory | default "256Mi" >>
        storage: << $config.resources.limits.storage | default "10Gi" >>
      requests:
        cpu: << $config.resources.requests.cpu | default "50m" >>
        memory: << $config.resources.requests.memory | default "128Mi" >>
        storage: << $config.resources.requests.storage | default "5Gi" >>
    restartPolicy: << $config.RestartPolicy | default "OnFailure" >>
    <<- with $config.configMap >>
    configMap:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    configMap: {}
      # mountPath: /etc/config/
      # tpl_folders: # folders to be included in configmap with tpl
      #   - folder_name
      # include_folders: # folders to be included in configmap without tpl
      #   - folder_name
      # data:
      #   name: value
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#volume-v1-core
    <<- with $config.volumes >>
    volumes:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    volumes: []
      # - name: ""
      #   configMap:
      #     name: configMapName
      # - name: ""
      #   emptyDir:
      #     medium: ""
      #     sizeLimit: 1Gi
      # - name: ""
      #   persistentVolumeClaim:
      #     claimName: ""
      #     readOnly: false
      # - name: ""
      #   secret: 
      #     secretName: ""
    <<- end >>
    <<- with $config.volumeMounts >>
    volumeMounts:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    volumeMounts: []
      # - mountPath: /etc/config/
      #   name: volume[*].name
      #   readOnly: true
    <<- end >>
    
    << with $config.podAnnotations ->>
    podAnnotations:
      <<- toYaml . | nindent 6 >>
    << else ->>
    podAnnotations: {}
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#podsecuritycontext-v1-core
    <<- with $config.podSecurityContext >>
    podSecurityContext:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    podSecurityContext: {}
    <<- end >>
      # fsGroup: 2
      # fsGroupChangePolicy: Always | OnRootMismatch
      # runAsGroup: 1001
      # runAsNonRoot: true
      # runAsUser: 1001
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#securitycontext-v1-core
    <<- with $config.securityContext >>
    securityContext:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    securityContext: {}
      # allowPrivilegeEscalation: false
      # capabilities:
      #   add: []
      #   drop: []
      # privileged: false
      # readOnlyRootFilesystem: true
      # runAsGroup: 1001
      # runAsNonRoot: true
      # runAsUser: 1001
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#nodeselector-v1-core
    << with $config.nodeSelector ->>
    nodeSelector:
      <<- toYaml . | nindent 6 >>
    << else ->>
    nodeSelector: {}
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#toleration-v1-core
    <<- with $config.tolerations >>
    tolerations:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    tolerations: []
      # - effect: NoSchedule | PreferNoSchedule | NoExecute
      #   key: ""
      #   operator: Exists | Equal
      #   tolerationSeconds: 600
      #   value: ""
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#affinity-v1-core
    <<- with $config.affinity >>
    affinity:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    affinity: {}
    <<- end >>
<< end >>
<<- else >>
jobs: {}
<<- end >>

#############################################
#                all workers                #
#############################################
<<- with .workers >>
workers:
<<- range $name, $config := . >>
  << $name >>:
    paused: true
    replicaCount: << $config.replicaCount | default 1 >>
    image:
      registry: << $config.image.registry | default $.docker.registry | default ("" | quote) >>
      repository: << $config.image.repository | default $.projectPath >>
      pullPolicy: << $config.image.pullPolicy | default ("" | quote) >>
      # Overrides the image tag whose default is the chart appVersion.
      tag: << $config.image.tag | default "" | quote >>
    env:
      <<- $env := merge (dict "BINARY_NAME" $name) (dict "BINARY_PORT" ($.docker.port | default 3000)) $config.env >>
      <<- toYaml $env | nindent 6 >>
    <<- with $config.envFrom >>
    envFrom:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    envFrom: []
      # - prefix: ""
      #   configMapRef:
      #     name: ""
      #   secretRef:
      #     name: ""
    <<- end >>

    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#probe-v1-core
    << with $config.livenessProbe ->>
    livenessProbe:
      <<- toYaml . | nindent 6 >>
    << else ->>
    livenessProbe: false
      # httpGet:
      #   httpHeaders:
      #     header-name: value
      #   path: /ping
      #   port: 3000
      #   scheme: http
      # initialDelaySeconds: 15
      # periodSeconds: 10
      # successThreshold: 1
      # failureThreshold: 3
    <<- end >>
    <<- with $config.readinessProbe >>
    readinessProbe:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    readinessProbe: false
      # exec:
      #   command: ["ls", "-lart"]
      # initialDelaySeconds: 15
      # periodSeconds: 10
      # successThreshold: 1
      # failureThreshold: 3
    <<- end >>
    <<- with $config.startupProbe >>
    startupProbe:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    startupProbe: false
      # grpc:
      #   port: 3000
      #   service: ""
      # initialDelaySeconds: 15
      # periodSeconds: 10
      # successThreshold: 1
      # failureThreshold: 3
    <<- end >>
    resources:
      limits:
        cpu: << $config.resources.limits.cpu | default "250m" >>
        memory: << $config.resources.limits.memory | default "256Mi" >>
        storage: << $config.resources.limits.storage | default "10Gi" >>
      requests:
        cpu: << $config.resources.requests.cpu | default "50m" >>
        memory: << $config.resources.requests.memory | default "128Mi" >>
        storage: << $config.resources.requests.storage | default "5Gi" >>
    autoscaling:
      enabled: << $config.autoscaling.enabled | default "false" >>
      minReplicas: << $config.autoscaling.minReplicas | default 1 >>
      maxReplicas: << $config.autoscaling.maxReplicas | default 10 >>
      <<- with $config.autoscaling.metrics >>
      metrics:
        <<- toYaml . | nindent 8 >>
      <<- else >>
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80
        - type: Resource
          resource:
            name: memory
            target:
              type: Utilization
              averageUtilization: 80
      <<- end >>
    restartPolicy: << $config.restartPolicy | default "Always" >>
    <<- with $config.configMap >>
    configMap:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    configMap: {}
      # mountPath: /etc/config/
      # tpl_folders: # folders to be included in configmap with tpl
      #   - folder_name
      # include_folders: # folders to be included in configmap without tpl
      #   - folder_name
      # data:
      #   name: value
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#volume-v1-core
    <<- with $config.volumes >>
    volumes:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    volumes: []
      # - name: ""
      #   configMap:
      #     name: configMapName
      # - name: ""
      #   emptyDir:
      #     medium: ""
      #     sizeLimit: 1Gi
      # - name: ""
      #   persistentVolumeClaim:
      #     claimName: ""
      #     readOnly: false
      # - name: ""
      #   secret: 
      #     secretName: ""
    <<- end >>
    <<- with $config.volumeMounts >>
    volumeMounts:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    volumeMounts: []
      # - mountPath: /etc/config/
      #   name: volume[*].name
      #   readOnly: true
    <<- end >>
    
    << with $config.podAnnotations ->>
    podAnnotations:
      <<- toYaml . | nindent 6 >>
    << else ->>
    podAnnotations: {}
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#podsecuritycontext-v1-core
    <<- with $config.podSecurityContext >>
    podSecurityContext:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    podSecurityContext: {}
    <<- end >>
      # fsGroup: 2
      # fsGroupChangePolicy: Always | OnRootMismatch
      # runAsGroup: 1001
      # runAsNonRoot: true
      # runAsUser: 1001
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#securitycontext-v1-core
    <<- with $config.securityContext >>
    securityContext:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    securityContext: {}
      # allowPrivilegeEscalation: false
      # capabilities:
      #   add: []
      #   drop: []
      # privileged: false
      # readOnlyRootFilesystem: true
      # runAsGroup: 1001
      # runAsNonRoot: true
      # runAsUser: 1001
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#nodeselector-v1-core
    << with $config.nodeSelector ->>
    nodeSelector:
      <<- toYaml . | nindent 6 >>
    << else ->>
    nodeSelector: {}
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#toleration-v1-core
    <<- with $config.tolerations >>
    tolerations:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    tolerations: []
      # - effect: NoSchedule | PreferNoSchedule | NoExecute
      #   key: ""
      #   operator: Exists | Equal
      #   tolerationSeconds: 600
      #   value: ""
    <<- end >>
    
    # https://kubernetes.io/docs/reference/generated/kubernetes-api/<< $kubeVersion >>/#affinity-v1-core
    <<- with $config.affinity >>
    affinity:
      <<- toYaml . | nindent 6 >>
    <<- else >>
    affinity: {}
    <<- end >>
<< end >>
<<- else >>
workers: {}
<<- end >>

#############################################
#             all dependencies              #
#############################################
<<- range .dependencies >>
<<- if .values >>
<< .name >>:
  <<- toYaml .values | nindent 2 >>
<<- else >>
<< .name >>: {}
<<- end >>
<<- end >>