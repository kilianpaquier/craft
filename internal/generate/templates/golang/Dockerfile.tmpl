# Code generated by craft; DO NOT EDIT.

<<- $binaries := dict >>
<<- $_ := map $binaries .Clis .Crons .Jobs .Workers >>

<<- $maintainer := index .Maintainers 0 >>

#############################
#        STAGE BUILD        #
#############################
FROM golang:<< .LangVersion >> AS build

WORKDIR /app

COPY . .

# hadolint ignore=DL3059
RUN go mod download

<<- if .API >>
# hadolint ignore=DL3059
RUN CGO_ENABLED=0 go build -o << .ProjectName >>-api cmd/<< .ProjectName >>-api/main.go
<<- end >>

<<- range $name, $config := $binaries >>
# hadolint ignore=DL3059
RUN CGO_ENABLED=0 go build -o << $name >> cmd/<< $name >>/main.go
<<- end >>

#############################
#         STAGE RUN         #
#############################
FROM gcr.io/distroless/static-debian12:nonroot

LABEL org.opencontainers.image.authors="<< $maintainer.Name >><< if $maintainer.Email >> <<"<">><< $maintainer.Email >><<">">><< end >>"
LABEL org.opencontainers.image.vendor="<< $maintainer.Name >>"

LABEL org.opencontainers.image.title="<< .ProjectName >>"
<<- if .Description >>
LABEL org.opencontainers.image.description="<< .Description >>"
<<- end >>
<<- if .License >>
LABEL org.opencontainers.image.licenses="<< upper .License >>"
<<- end >>
LABEL org.opencontainers.image.url="<< print .ProjectHost "/" .ProjectPath >>"
LABEL org.opencontainers.image.source="<< print .ProjectHost "/" .ProjectPath >>"
LABEL org.opencontainers.image.documentation="<< print .ProjectHost "/" .ProjectPath >>"

WORKDIR /app

COPY --from=build \
<<- if .API >>
    /app/<< .ProjectName >>-api \
<<- end >>
<<- range $name, $config := $binaries >>
    /app/<< $name >> \
<<- end >>
    ./

<<- $entrypoint := "launcher.sh" >>

<<- if eq .Binaries 1 >>
<<- if .API >>

<<- /* directly use api binary if it is the only binary */>>
<<- $entrypoint = print .ProjectName "-api" >>

<<- else >>

<<- /* directly use the only binary */>>
<<- range $name, $config := $binaries >>
<<- $entrypoint = $name >>
<<- end >>

<<- end >>
<<- end >>

<<- /* copy launcher if the entrypoint is the launcher */>>
<<- if eq $entrypoint "launcher.sh" >>
COPY launcher.sh launcher.sh
<<- end >>

EXPOSE << .Docker.Port | default 3000 >>

ENTRYPOINT [ "/app/<< $entrypoint >>" ]