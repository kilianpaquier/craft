# Code generated by craft; DO NOT EDIT.

<<- $binaries := dict >>
<<- $_ := map $binaries .Clis .Crons .Jobs .Workers >>
<<- $docker := and .Docker (or .API (gt (len $binaries) 0)) >>

---
include:
<<- if $docker >>

  # Docker template
  - project: "to-be-continuous/docker"
    ref: "5"
    file: "templates/gitlab-ci-docker.yml"
<<- end >>

  # Go template
  - project: "to-be-continuous/golang"
    ref: "4"
    file: "templates/gitlab-ci-golang.yml"

<<- if has "sonar" .CI.Options >>

  # SonarQube template
  - project: "to-be-continuous/sonar"
    ref: "4"
    file: "templates/gitlab-ci-sonar.yml"
<<- end >>

variables:
  GO_IMAGE: "registry.hub.docker.com/library/golang:latest"
  GO_TEST_IMAGE: "registry.hub.docker.com/library/golang:latest"
  GO_TEST_FLAGS: "-coverpkg=./... -covermode=count"
  GO_CI_LINT_IMAGE: "registry.hub.docker.com/golangci/golangci-lint:latest-alpine"
  GO_CI_LINT_ARGS: "--config .golangci.yml --timeout 240s --fast --sort-results"
  GO_SBOM_DISABLED: "true"

<<- if $docker >>
<<- if .Docker.Registry >>

  CI_REGISTRY: << .Docker.Registry >>
<<- end >>

  DOCKER_KANIKO_IMAGE: "gcr.io/kaniko-project/executor:debug"
  DOCKER_SNAPSHOT_IMAGE: "${CI_REGISTRY_IMAGE}:${SEMREL_INFO_NEXT_VERSION}"
  DOCKER_RELEASE_IMAGE: "${CI_REGISTRY_IMAGE}:${SEMREL_INFO_NEXT_VERSION}"
  DOCKER_RELEASE_EXTRA_TAGS: "latest \\g<major>.\\g<minor> \\g<major"
  DOCKER_METADATA: |
    --label org.opencontainers.image.created=${CI_JOB_STARTED_AT}
    --label org.opencontainers.image.ref.name=${CI_COMMIT_REF_NAME}
    --label org.opencontainers.image.version=${SEMREL_INFO_NEXT_VERSION}
    --label org.opencontainers.image.revision=${CI_COMMIT_SHA}
  DOCKER_SEMREL_RELEASE_DISABLED: "true"
  DOCKER_HEALTHCHECK_DISABLED: "true"
  DOCKER_TRIVY_SECURITY_LEVEL_THRESHOLD: "MEDIUM,HIGH,CRITICAL"
  DOCKER_TRIVY_ARGS: "--ignore-unfixed --exit-code 1 --exit-on-eol 1"
  DOCKER_SBOM_DISABLED: "true"
<<- end >>

<<- if has "sonar" .CI.Options >>

  SONAR_HOST_URL: "https://sonarcloud.io"
  SONAR_BASE_ARGS: |
    -Dsonar.properties=sonar.properties 
    -Dsonar.links.homepage=${CI_PROJECT_URL} 
    -Dsonar.links.ci=${CI_PROJECT_URL}/-/pipelines 
    -Dsonar.links.issue=${CI_PROJECT_URL}/-/issues
  SONAR_QUALITY_GATE_ENABLED: "true"
<<- end >>

<<- $gobuild := and (not .NoGoreleaser) (gt (len .Clis) 0) >>
<<- if $gobuild >>

go-build:
  image: ghcr.io/goreleaser/goreleaser:latest
  script:
    - goreleaser release --clean --config .goreleaser.yml --skip=validate --skip=announce --skip=publish --snapshot
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    paths:
      - dist
      - checksums.txt
    expire_in: 1 day
<<- else >>

go-build:
  when: never
<<- end >>