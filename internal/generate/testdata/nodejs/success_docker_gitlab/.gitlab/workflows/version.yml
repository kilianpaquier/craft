# Code generated by craft; DO NOT EDIT.

---
include:

  # semantic-release template
  - project: "to-be-continuous/semantic-release"
    ref: "3"
    file: "templates/gitlab-ci-semrel.yml"

variables:
  GIT_AUTHOR_EMAIL: ${GITLAB_USER_EMAIL}
  GIT_COMMITTER_EMAIL: ${GITLAB_USER_EMAIL}

  SEMREL_TAG_FORMAT: v$${version}
  SEMREL_REQUIRED_PLUGINS_FILE: .gitlab/semrel-plugins.txt
  SEMREL_HOOKS_DIR: scripts
  SEMREL_INFO_ON: protected
  SEMREL_INFO_NEXT_VERSION: v${SEMREL_INFO_NEXT_VERSION}

version:
  image: $SEMREL_IMAGE
  stage: .pre
  script:
    - SEMREL_INFO_NEXT_VERSION=""
    - git fetch -apt
    - SHA=$(echo "${CI_COMMIT_REF_NAME}" | sha256sum | cut -c -8)
    - >
      if [ "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "" ]; then
        if echo "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" | grep "^v[0-9]+$"; then
          SEARCH="$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
        fi
      fi

      for tag in $(git ls-remote --exit-code --sort "-version:refname" --tags origin "refs/tags/${SEARCH}*"); do
        if echo "$tag" | grep -Eq "^refs/tags/.*$"; then
          SEMREL_INFO_NEXT_VERSION="${tag##refs/tags/}"
          SEMREL_INFO_NEXT_VERSION="${SEMREL_INFO_NEXT_VERSION%%-*}"
          break
        fi
      done

      if [ "$SEMREL_INFO_NEXT_VERSION" = "" ]; then
        SEMREL_INFO_NEXT_VERSION="0.0.0"
      fi

    - echo "SEMREL_INFO_NEXT_VERSION=${SEMREL_INFO_NEXT_VERSION#v}-${SHA}" >> "${SEMREL_CONFIG_DIR}/semrel.out.env"
    - cat "${SEMREL_CONFIG_DIR}/semrel.out.env"
  artifacts:
    reports:
      dotenv: "${SEMREL_CONFIG_DIR}/semrel.out.env"
  rules:
    - if: $CI_COMMIT_REF_PROTECTED != 'true'