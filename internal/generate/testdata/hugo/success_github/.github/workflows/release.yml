# Code generated by craft; DO NOT EDIT.

name: Release
run-name: Release

on:
  push:
    branches:
      - alpha
      - beta
      - develop
      - main
      - next
      - staging
      # unnecessary to espace '.'
      # see https://docs.github.com/fr/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - v[0-9]+(.[0-9]+)?
  workflow_dispatch:
    inputs:
      dry_run:
        description: Dry run
        type: boolean
        default: false

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
      release: ${{ steps.release.outputs.release }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: sha
        run: echo "sha=$(echo "$GITHUB_REF_NAME" | sha256sum | cut -c -8)" >> $GITHUB_OUTPUT
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semantic_release
        continue-on-error: true
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits@7
            semantic-release-license
            @kilianpaquier/semantic-release-backmerge
          dry_run: true
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.+([0-9]))",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "develop", "prerelease": "alpha" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: release
        run: |
          if [ "$RELEASED" = "true" ]; then
            echo "version=v$NEW_VERSION" >> $GITHUB_OUTPUT
          elif [ "$LAST_VERSION" != "" ]; then
            echo "version=v${LAST_VERSION}-${BRANCH_SHA}" >> $GITHUB_OUTPUT
          else
            echo "version=v0.0.0-dev.${BRANCH_SHA}" >> $GITHUB_OUTPUT
          fi

          if [[ $NEW_VERSION =~ ^[0-9]+(\.[0-9]+){2}$ ]]; then
            echo "release=true" >> $GITHUB_OUTPUT
          fi
        env:
          BRANCH_SHA: ${{ steps.sha.outputs.sha }}
          LAST_VERSION: ${{ steps.semantic_release.outputs.last_release_version }}
          NEW_VERSION: ${{ steps.semantic_release.outputs.new_release_version }}
          RELEASED: ${{ steps.semantic_release.outputs.new_release_published }}
      - run: echo $VERSION
        env:
          VERSION: ${{ steps.release.outputs.version }}

  hugo-build:
    name: Hugo Build
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true # fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod
      - uses: actions/cache@v4
        with:
          path: /home/runner/.cache/hugo_cache
          key: hugo-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            hugo-
      # https://github.com/marketplace/actions/hugo-setup
      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: latest
          extended: true
      - run: hugo --gc --minify --destination dist
      - uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: dist
          retention-days: 1

  pages:
    name: Pages
    runs-on: ubuntu-latest
    if: github.ref_protected == true
    needs:
      - hugo-build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          preview: ${{ inputs.dry_run }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref_protected == true
    environment: release
    needs:
      - hugo-build
      - pages
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits@7
            semantic-release-license
            @kilianpaquier/semantic-release-backmerge
          dry_run: ${{ inputs.dry_run }}
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.+([0-9]))",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "develop", "prerelease": "alpha" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}