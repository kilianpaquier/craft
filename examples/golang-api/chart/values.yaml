# Code generated by craft; DO NOT EDIT.

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - chart-example.local
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

#############################################
#                   api                     #
#############################################
api:
  paused: true
  replicaCount: 1
  image:
    registry: ghcr.io/
    repository: kilianpaquier/craft/examples/golang-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  env:
    BINARY_NAME: api
    BINARY_PORT: 3000
  envFrom: []
    # - prefix: ""
    #   configMapRef:
    #     name: ""
    #   secretRef:
    #     name: ""
  
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#probe-v1-core
  livenessProbe: false
    # httpGet:
    #   httpHeaders:
    #     header-name: value
    #   path: /unsecured/ping
    #   port: 3000
    #   scheme: http
    # initialDelaySeconds: 15
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 3
  readinessProbe: false
    # exec:
    #   command: ["ls", "-lart"]
    # initialDelaySeconds: 15
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 3
  startupProbe: false
    # grpc:
    #   port: 3000
    #   service: ""
    # initialDelaySeconds: 15
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 3
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
      storage: 10Gi
    requests:
      cpu: 50m
      memory: 128Mi
      storage: 5Gi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  restartPolicy: Always
  configMap: {}
    # mountPoint: /etc/config/
    # tpl_folders: # folders to be included in configmap with tpl
    #   - folder_name
    # include_folders: # folders to be included in configmap without tpl
    #   - folder_name
    # data:
    #   name: value
  
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#volume-v1-core
  volumes: []
    # - name: ""
    #   configMap:
    #     name: configMapName
    # - name: ""
    #   emptyDir:
    #     medium: ""
    #     sizeLimit: 1Gi
    # - name: ""
    #   persistentVolumeClaim:
    #     claimName: ""
    #     readOnly: false
    # - name: ""
    #   secret: 
    #     secretName: ""
  volumeMounts: []
    # - mountPath: /etc/config/
    #   name: volume[*].name
    #   readOnly: true
  
  podAnnotations: {}
  
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  podSecurityContext: {}
    # fsGroup: 2
    # fsGroupChangePolicy: Always | OnRootMismatch
    # runAsGroup: 1001
    # runAsNonRoot: true
    # runAsUser: 1001
  
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  securityContext: {}
    # allowPrivilegeEscalation: false
    # capabilities:
    #   add: []
    #   drop: []
    # privileged: false
    # readOnlyRootFilesystem: true
    # runAsGroup: 1001
    # runAsNonRoot: true
    # runAsUser: 1001
  
  nodeSelector: {}
  
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core
  tolerations: []
    # - effect: NoSchedule | PreferNoSchedule | NoExecute
    #   key: ""
    #   operator: Exists | Equal
    #   tolerationSeconds: 600
    #   value: ""
  
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core
  affinity: {}

#############################################
#               all cronjobs                #
#############################################
crons: {}

#############################################
#                 all jobs                  #
#############################################
jobs: {}

#############################################
#                all workers                #
#############################################
workers: {}

#############################################
#             all dependencies              #
#############################################