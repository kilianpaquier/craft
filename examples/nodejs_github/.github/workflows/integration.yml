# Code generated by craft; DO NOT EDIT.

name: Integration
run-name: Integration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
      - master
      - staging
      - dev
      - develop
      - development
      - next
      - beta
      - alpha
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:

jobs:

  run-workflow:
    name: Run Workflow
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && github.ref_protected != true) }}
    outputs:
      skip: ${{ steps.skip.outputs.skip }}
    steps:
      - id: skip
        run: echo "Running workflow" && echo "skip=false" >> $GITHUB_OUTPUT

  node-audit:
    name: Node Audit
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: pnpm audit

  node-lint:
    name: Node Lint
    runs-on: ubuntu-latest
    needs: run-workflow
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: mkdir -p reports/
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint -o reports/node-lint.xslint.json -f json
      - uses: actions/upload-artifact@v4
        with:
          name: lint
          path: reports
          retention-days: 1

  node-test:
    name: Node Test
    runs-on: ${{ matrix.os }}
    needs: run-workflow
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    env:
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: mkdir -p reports/
      - run: pnpm install-test --frozen-lockfile
      - uses: codecov/codecov-action@v4
        if: ${{ ! startsWith(github.head_ref, 'dependabot') }} # ignore codecov on dependabot branches
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: true
          file: reports/lcov.info
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: reports
          retention-days: 1

  docker-hadolint:
    name: Docker Hadolint
    runs-on: ubuntu-latest
    needs: run-workflow
    permissions:
      pull-requests: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true # enforce scan upload to codeql
        with:
          format: sarif
          output-file: hadolint-results.sarif
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: hadolint-results.sarif
          category: docker-hadolint
      - id: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          format: tty

  sonar-analysis:
    name: Sonar Analysis
    runs-on: ubuntu-latest
    needs:
      - run-workflow
      - node-lint
      - node-test
    env:
      SONAR_USER_HOME: .sonar
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
      - uses: actions/cache/restore@v4
        with:
          path: ${{ env.SONAR_USER_HOME }}
          key: sonar-cache
      - uses: sonarsource/sonarcloud-github-action@master
        if: github.event_name == 'pull_request'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.key=${{ github.event.issue.number }}
      - uses: sonarsource/sonarcloud-github-action@master
        if: github.event_name == 'push'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.branch.name=${{ github.ref_name }}
      - uses: actions/cache/save@v4
        with:
          path: ${{ env.SONAR_USER_HOME }}
          key: sonar-cache

  workflow-result:
    name: Workflow Result
    runs-on: ubuntu-latest
    if: ${{ needs.run-workflow.outputs.skip == 'false' && ! cancelled() }}
    needs:
      - run-workflow
      - node-audit
      - node-lint
      - node-test
      - docker-hadolint
      - sonar-analysis
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped') }}