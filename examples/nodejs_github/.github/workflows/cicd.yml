# Code generated by craft; DO NOT EDIT.

name: CICD
run-name: CICD

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - alpha
      - beta
      - dev
      - develop
      - development
      - next
      - staging
      - main
      - master
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && github.ref_protected == false) }}
    environment: version
    permissions:
      id-token: write
    outputs:
      branch_sha: ${{ steps.version.outputs.branch_sha }}
      release: ${{ steps.version.outputs.release }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        continue-on-error: true
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          semantic_version: 24
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            @semantic-release/npm
            semantic-release-license
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - id: version
        run: |
          echo "branch_sha=$(echo "${GITHUB_REF_NAME}" | sha256sum | cut -c -8)" >> $GITHUB_OUTPUT
          if [ "${SEMREL_INFO_NEXT_VERSION}" != "" ]; then
            echo "version=v${SEMREL_INFO_NEXT_VERSION#v}" >> $GITHUB_OUTPUT
            echo "release=$([[ "${SEMREL_INFO_NEXT_VERSION#v}" =~ ^[0-9]+(\.[0-9]+){2}$ ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          else
            DESCRIBE=$(git describe --tags || echo "v1.0.0")
            echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
            echo "release=false" >> $GITHUB_OUTPUT
          fi
        env:
          SEMREL_INFO_NEXT_VERSION: ${{ steps.semrel_version.outputs.new_release_version }}
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  node:
    name: Node
    needs: version
    uses: ./.github/workflows/nodejs.yml
    with:
      event_name: ${{ github.event_name }}
    secrets: inherit

  docker:
    name: Docker
    runs-on: ubuntu-latest
    environment: docker
    needs:
      - version
      - node
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write
      security-events: write
    steps:
      - id: image
        run: |
          if [ "${RELEASE}" != "true" ]; then
            IMAGE="${GIT_REPOSITORY}/snapshot"
          fi
          echo "image=${GIT_REPOSITORY}" >> $GITHUB_OUTPUT
        env:
          RELEASE: ${{ needs.version.outputs.release }}
      - uses: ./.github/actions/docker
        with:
          image: ${{ steps.image.outputs.image }}
          registry_token: ${{ secrets.REGISTRY_TOKEN }}
          registry: ghcr.io
          version: ${{ needs.version.outputs.version }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_protected == 'true' }}
    environment: release
    needs:
      - version
      - node
      - docker
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        continue-on-error: true
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: false
          semantic_version: 24
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            @semantic-release/npm
            semantic-release-license
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}