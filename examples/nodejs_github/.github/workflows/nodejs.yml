# Code generated by craft; DO NOT EDIT.

name: Node
run-name: Node

on:
  workflow_call:
    inputs:
      event_name:
        description: GitHub Actions real event_name since it will always 'workflow_dispatch' by default.
        required: true
        type: string

jobs:

  node-audit:
    name: Node Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: pnpm audit

  node-lint:
    name: Node Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: mkdir -p reports/
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint -o reports/node-lint.xslint.json -f json
      - uses: actions/upload-artifact@v4
        with:
          name: lint
          path: reports
          retention-days: 1

  node-test:
    name: Node Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    env:
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: mkdir -p reports/
      - run: pnpm install-test --frozen-lockfile
      - uses: codecov/codecov-action@v5
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: true
          files: reports/lcov.info
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: reports
          retention-days: 1

  node-build:
    name: Node Build
    runs-on: ubuntu-latest
    needs:
      - node-test
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: lts/*
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  sonar-analysis:
    name: Sonar Analysis
    runs-on: ubuntu-latest
    needs:
      - node-lint
      - node-test
    env:
      SONAR_USER_HOME: .sonar
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
      - uses: actions/cache/restore@v4
        with:
          path: ${{ env.SONAR_USER_HOME }}
          key: sonar-cache
      - if: ${{ inputs.event_name == 'pull_request' }}
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.key=${{ github.event.issue.number }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - if: ${{ inputs.event_name == 'push' }}
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: |
            -Dproject.settings=sonar.properties
            -Dsonar.branch.name=${{ github.ref_name }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: actions/cache/save@v4
        with:
          path: ${{ env.SONAR_USER_HOME }}
          key: sonar-cache