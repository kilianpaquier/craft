# Code generated by craft; DO NOT EDIT.

name: Release
run-name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: Dry run
        type: boolean
        default: false

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      branch_sha: ${{ steps.release.outputs.branch_sha }}
      release: ${{ steps.release.outputs.release }}
      version: ${{ steps.release.outputs.version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semantic_release
        continue-on-error: true
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
          dry_run: true
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.{+([0-9]),x}).x",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "(dev|develop|development)", "prerelease": "alpha" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: release
        run: |
          BRANCH_SHA=$(echo "${GITHUB_REF_NAME}" | sha256sum | cut -c -8)
          echo "branch_sha=${BRANCH_SHA}" >> $GITHUB_OUTPUT

          if echo "$SEMREL_INFO_NEXT_VERSION" | grep -Eq "^[0-9]+(\.[0-9]+){2}.*$"; then
            echo "version=v$SEMREL_INFO_NEXT_VERSION" >> $GITHUB_OUTPUT
            echo "$SEMREL_INFO_NEXT_VERSION" | grep -Eq "^[0-9]+(\.[0-9]+){2}$" && echo "release=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          git fetch --tags

          SEMREL_INFO_LAST_VERSION=$(git tag --list | sort -V | tail -n1)

          SEMREL_INFO_NEXT_VERSION=${SEMREL_INFO_LAST_VERSION-1.0.0}
          SEMREL_INFO_NEXT_VERSION=${SEMREL_INFO_NEXT_VERSION%-*}

          echo "version=v${SEMREL_INFO_NEXT_VERSION#v}-build.${BRANCH_SHA}" >> $GITHUB_OUTPUT
        env:
          SEMREL_INFO_LAST_VERSION: ${{ steps.semantic_release.outputs.last_release_version }}
          SEMREL_INFO_NEXT_VERSION: ${{ steps.semantic_release.outputs.new_release_version }}
      - run: echo $VERSION
        env:
          VERSION: ${{ steps.release.outputs.version }}

  hugo-build:
    name: Hugo Build
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.event_name, 'pull_request') }}
    needs: version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true # fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # fetch all history for .GitInfo and .Lastmod
      - uses: actions/cache@v4
        with:
          path: /home/runner/.cache/hugo_cache
          key: hugo-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            hugo-
      # https://github.com/marketplace/actions/hugo-setup
      - uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: latest
          extended: true
      - run: hugo --gc --minify --destination dist
      - uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: dist
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 1

  pages:
    name: Pages
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == github.event.repository.default_branch && ! startsWith(github.event_name, 'pull_request') }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs:
      - hugo-build
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          preview: ${{ inputs.dry_run }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.ref_protected && ! startsWith(github.event_name, 'pull_request') }}
    environment: release
    needs:
      - hugo-build
      - pages
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
          dry_run: ${{ inputs.dry_run }}
          tag_format: v${version}
          branches: |
            [
              "(master|main)",
              "v+([0-9])?(.{+([0-9]),x}).x",
              { "name": "next", "prerelease": true },
              { "name": "beta", "prerelease": true },
              { "name": "alpha", "prerelease": true },
              { "name": "staging", "prerelease": "beta" },
              { "name": "(dev|develop|development)", "prerelease": "alpha" }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}